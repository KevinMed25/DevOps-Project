services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - fleet-network

  app:
    build: .
    container_name: app
    env_file:
      - .env
    ports:
      - "5001:5000" 
    depends_on:
      - db
    command: ["./wait-for-it.sh", "db:3306", "--timeout=30", "--", "flask", "run"]
    networks:
      - fleet-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false 
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - fleet-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      interval: 10s
      timeout: 5s
      retries: 5

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeatdata:/usr/share/filebeat/data
    networks:
      - fleet-network
    depends_on:
      app:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    command: ["filebeat", "-e", "-strict.perms=false"]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafanadata:/var/lib/grafana
    networks:
      - fleet-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_LOG_LEVEL=info

volumes:
  mysql_data:
  esdata:
  filebeatdata:
  grafanadata:

networks:
  fleet-network:
    driver: bridge